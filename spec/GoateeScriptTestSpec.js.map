{"version":3,"sources":["GoateeScriptTestSpec.coffee"],"names":[],"mappings":"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","file":"GoateeScriptTestSpec.js","sourcesContent":["###\n© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n© Copyright 2012 Kris Nye <krisnye@gmail.com>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n###\n\nBenchmark = require 'benchmark'\n\n{\n  evaluate,\n  parse,\n  render\n}         = require '../lib/GoateeScript'\n\n{\n  isArray\n}         = require '../lib/Utility'\n\n\n#_         ?= null\n#expect    ?= null\n#describe  ?= null\n#xdescribe ?= null\n#it        ?= null\n#xit       ?= null\n#JSON      ?= null\n\ndescribe \"GoateeScript\", ->\n\n  data      =\n    clothes: [\n      { name: 'Shirt', sizes: ['S','M','L'], price:14.50, quantity: 8 }\n      { name: 'Pants', sizes: [29,30,31,32], price:20.19, quantity: 6  }\n      { name: 'Shoes', sizes: [8,9,10], price:25.85, quantity: 15  }\n      { name: 'Ties' , sizes: [2], price:3.99, quantity: 3  }\n    ]\n    codes:\n      alpha:   { discount: 10, items:4 }\n      beta:    { discount: 20, items:2 }\n      charlie: { discount: 30, items:1 }\n    favoriteChild: 'pat'\n    children:\n      pat:\n        name: 'pat'\n        age: 28\n        children:\n          jay: { name: 'jay', age: 4 }\n          bob: { name: 'bob', age:8 }\n      skip:\n        name: 'skip'\n        age: 30\n        children:\n          joe: { name: 'joe', age: 7 }\n    dynamic: 0\n    increment: (count) -> this.dynamic += count\n    min: (a, b) ->\n      return a unless b?\n      return b unless a?\n      if a.valueOf() <= b.valueOf() then a else b\n    max: (a, b) ->\n      return a unless b?\n      return b unless a?\n      if a.valueOf() >= b.valueOf() then a else b\n    sum: sum = (a) ->\n      return 0 unless a?\n      if isArray a\n        total = 0\n        for item in a\n          total += sum item\n        return total\n      number = Number a\n      if isNaN number then 0 else number\n\n  benchmark = new Benchmark.Suite\n\n  egal = (code, expected) ->\n    expression = parse code\n    expect(expression.evaluate(data)).toBe expected\n\n  compare = (code, expected) ->\n    expression = parse code\n    expect(JSON.stringify(expression.evaluate(data)))\n      .toBe JSON.stringify(expected)\n\n  it 'can add two positive numbers', ->\n    egal '1+1', 2\n\n  xit 'can add two positive numbers in given time', (done) ->\n\n    benchmark\n      .add('goatee-script  : 1+1',  -> evaluate('1+1'))\n      .add('javascript     : 1+1',  -> 1+1)\n      .add('javascript eval: 1+1',  -> eval('1+1'))\n      .on('cycle',    (event) ->\n        console.log(String(event.target))\n      )\n      .on('complete', ()      ->\n        expect(@filter('fastest').pluck('name')[0]).toBe 'javascript     : 1+1'\n        done()\n      )\n      .run({async: false })\n\n  it 'resolves expression vectors', ->\n    expect(parse('5').vector).toBe false\n    expect(parse('5+2').vector).toBe false\n    #expect(parse('*').vector).toBe true\n    #expect(parse('*.alpha').vector).toBe true\n    #expect(parse('alpha.* * 12').vector).toBe true\n    #expect(parse('alpha.*').vector).toBe true\n    expect(parse('func(alpha)').vector).toBe false\n    #expect(parse('func(*)').vector).toBe false\n    #expect(parse('func(alpha.*.beta)').vector).toBe false\n\n  it 'resolves one or multiple collapsing “undefined” values', ->\n    statements = ['', ';;;;', ';/* nix */;']\n    for s in statements\n      expect(evaluate(s)).toBe undefined\n      expect(render(s)).toBe ''\n\n  it 'resolves one or multiple “null” values', ->\n    statements = ['null', 'null;null', 'null;null;null']\n    for s in statements\n      expect(evaluate(s)).toBe null\n      expect(render(s)).toBe s\n\n  it 'resolves multiple “null” and collapsing “undefined” values', ->\n    statements = [';null;null;;', 'null;;null;;', 'null;/*;null;*/null;;']\n    for s in statements\n      expect(evaluate(s)).toBe null\n      expect(render(s)).toBe 'null;null'\n\n  it 'resolves scalar values (primitives)', ->\n    egal \"5\", 5\n    egal \"'5'\", '5'\n    egal \"1 + 2\", 3\n    egal \"1 + 2 * 3\", 7\n    egal \"'a' + 'b'\", 'ab'\n\n  it 'resolves object access', ->\n    egal \"codes\", data.codes\n    egal \"codes.alpha\", data.codes.alpha\n    egal \"codes.alpha.discount\", data.codes.alpha.discount\n\n    egal \"codes.discount\", undefined\n\n  xit 'resolves object with children access', ->\n    compare \"*\", _.values data\n    compare \"codes.*\", [data.codes.alpha, data.codes.beta, data.codes.charlie]\n    compare \"codes.*.discount\", [10,20,30]\n    compare \"codes.*{discount > 10}\", [data.codes.beta, data.codes.charlie]\n\n  it 'resolves array access', ->\n    # test numbers and indexers\n    egal \"clothes[0]\", data.clothes[0]\n    # test negative numbers and indexers\n    egal \"clothes[-1]\", data.clothes[data.clothes.length-1]\n\n  it 'resolves scope access', ->\n    egal \"children\", data.children\n    #  because the children object contains no children property\n    egal \"children.children\", undefined\n\n  xit 'resolves children access', ->\n    compare \"children.*\", [\n      data.children.pat\n      data.children.skip\n    ]\n    compare \"children.*.children\", [\n      data.children.pat.children\n      data.children.skip.children\n    ]\n    compare \"children.*.children.*\", [\n      data.children.pat.children.jay\n      data.children.pat.children.bob\n      data.children.skip.children.joe\n    ]\n\n  xit 'resolves object access predicates', ->\n    #  bare predicates no longer supported so use this[predicate]\n    egal \"@{clothes != null}\", data\n    compare \"@{clothes == null}\", undefined\n\n    #  predicates\n    compare \"children.*{name == 'skip'}\", [data.children.skip]\n    compare \"children.*{children.*{age < 5}}\", [data.children.pat]\n\n\n  it 'resolves constructor access', ->\n    egal \"codes.constructor\", undefined\n    egal \"codes.__proto__\", undefined\n    egal \"codes.prototype\", undefined\n\n  it 'resolves prototype access', ->\n    egal \"codes + ''\", data.codes.toString()\n    egal \"codes.toString()\", data.codes.toString()\n    egal \"codes.valueOf()\", data.codes.valueOf()\n    egal \"clothes.length\", 4\n\n  xit 'resolves array access predicates', ->\n    #  get the sizes of clothes that are even.\n    compare \"clothes.*.sizes.*{@ % 2 == 0}\", [30,32,8,10,2]\n    compare \"clothes.*{sizes == 'M' || sizes == 9}\", [\n      { name: 'Shirt', sizes: ['S','M','L'], price:14.50, quantity: 8 }\n      { name: 'Shoes', sizes: [8,9,10], price:25.85, quantity: 15  }\n    ]\n\n  it 'resolves context references', ->\n    # test root references\n    egal \"@\", data\n    egal \"$$\", data\n    compare \"test = 1 ; $_\", {test:1}\n\n    # or more concisely\n    egal \"children[favoriteChild]\", data.children.pat\n\n  xit 'resolves context references with predicate', ->\n    egal \"children.*{name == favoriteChild}[0]\", data.children.pat\n\n  xit 'resolves context specific operation using .(local paths) syntax.', ->\n    #  context specific operation using .(local paths) syntax.\n    egal \"sum(clothes.*.(price * quantity))\", 636.86\n\n  it 'resolves context reference function calls', ->\n    # test min and max\n    egal \"min(12, 20)\", 12\n    egal \"max(30, 50)\", 50\n\n  it 'resolves object and array literals', ->\n    obj = {alpha:data.codes.alpha.discount, beta:2}\n    ary = [3,2,data.codes.beta.discount]\n    #  test object literal\n    compare '{alpha:codes.alpha.discount,\"beta\":2}', obj\n\n    #  test array literal\n    compare '[3,2,codes.beta.discount]', ary\n\n    #  test object literal and array literal\n    obj.charlie = ary\n    compare '{alpha:codes.alpha.discount,' + \\\n            '\"beta\":2,' + \\\n            'charlie:[3,2,codes.beta.discount]}', obj\n\n  it 'resolves “if”/“else” conditions', ->\n    # compares multiline expressions too\n    data.dynamic = 0\n    egal \"\"\"\n      if (codes != null) {\n        increment(10);\n      }\n      else {\n        increment(20);\n      };\n      dynamic;\n      \"\"\", 10\n    expect(data.dynamic).toBe 10\n\n  it 'resolves chained “if”/“else if”/“else” conditions', ->\n    # compares multiline expressions too\n    code = \"\"\"\n      if (0 === dynamic) {\n        increment(10);\n      }\n      else if (1 === dynamic) {\n        increment(19);\n      }\n      else {\n        increment(30 - dynamic);\n      };\n      dynamic;\n      \"\"\"\n    data.dynamic = 0\n    egal code, 10\n    expect(data.dynamic).toBe 10\n\n    data.dynamic = 1\n    egal code, 20\n    expect(data.dynamic).toBe 20\n\n    data.dynamic = 2\n    egal code, 30\n    expect(data.dynamic).toBe 30\n\n\n  xit 'resolves “for”-loop and multiline statements', ->\n    # compare for loop\n    compare \"\"\"\n      for (clothes) {\n        p = price;\n        q = quantity;\n        p * q;\n      }\n      \"\"\", [ 116, 121.14000000000001, 387.75, 11.97 ]\n\n  it 'resolves early terminating conditionals', ->\n\n    # compare early termination of OR\n    data.dynamic = 0\n    egal \"increment(10) || increment(20); dynamic;\", 10\n    expect(data.dynamic).toBe 10\n\n    # compare early termination of AND\n    data.dynamic = 0\n    egal \"increment(0) && increment(20); dynamic;\", 0\n    expect(data.dynamic).toBe 0\n\n    # compare early termination of conditional\n    data.dynamic = 0\n    egal \"false ? increment(10) : increment(20); dynamic;\", 20\n    expect(data.dynamic).toBe 20\n\n  it 'resolves all mathematical assignments', ->\n    egal \"\"\"\n    variable = 40 + 5;  /* = 45 */\n    variable *= 10;     /* = 450 */\n    variable /= 5;      /* = 90 */\n    variable -= 40;     /* = 50 */\n    variable += 15;     /* = 65 */\n    variable++    ;     /* = 66 */\n    variable--    ;     /* = 65 */\n    ++variable    ;     /* = 66 */\n    --variable    ;     /* = 65 */\n    \"\"\", 65\n\n  it 'resolves context assignments', ->\n    egal \"\"\"\n    variable = codes;\n    variable.alpha;\n    \"\"\", data.codes.alpha\n\n  it 'resolves local variable and context property having the same name', ->\n    egal \"\"\"\n    favoriteChild = 'Kris';\n    favoriteChild + $$favoriteChild;\n    \"\"\", \"Krispat\"\n"]}