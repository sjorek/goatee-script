{"version":3,"sources":["misc/gulp/gulp-jison.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;AAAA;AAAA,MAAA,kDAAA;IAAA;;EAgBA,EAAA,GAAK,OAAA,CAAQ,IAAR;;EACL,IAAA,GAAO,OAAA,CAAQ,MAAR;;EACP,GAAA,GAAM,OAAA,CAAQ,YAAR;;EACN,IAAA,GAAO,OAAA,CAAQ,WAAR;;EACP,WAAA,GAAc,IAAI,CAAC;;EACnB,GAAA,GAAM,OAAA,CAAQ,eAAR;;;AAEN;;;;;;EAMA,WAAA,GAAc;;EAEd,MAAM,CAAC,OAAP,GAAiB,SAAC,OAAD;AAGf,QAAA;IAAA,GAAA,GAAM;IACN,IAAG,uBAAH;MACE,GAAA,GAAM,EAAE,CAAC,YAAH,CAAgB,IAAI,CAAC,SAAL,CAAe,OAAO,CAAC,OAAvB,CAAhB,EAAiD,MAAjD,EADR;;IAGA,WAAA,GAAc,SAAC,IAAD,EAAO,OAAP;AAEZ,UAAA;MAAA,IAAA,GAAO;MACP,IAAmD,eAAnD;AAAA,aAAA,cAAA;;;UAAA,IAAK,CAAA,GAAA,CAAL,GAAY;AAAZ,SAAA;;MAEA,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC;MACjB,GAAA,GAAM,IAAI,CAAC,QAAQ,CAAC,QAAd,CAAA;MAGN,IAAA,CAAsD,IAAI,CAAC,IAA3D;QAAA,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAlB,CAAA,KAA2B,QAAvC;;MAIA,IAAA,GAAO,IAAI,CAAC,QAAL,sCAA6B,IAAI,CAAC,IAAlC,CAAuC,CAAC,OAAxC,CAAgD,QAAhD,EAA0D,EAA1D;MAEP,IAAmC,oBAAnC;QAAA,IAAI,CAAC,OAAL,GAAkB,IAAD,GAAM,MAAvB;;MAEA,IAAO,yBAAJ,IAAyB,IAA5B;QACE,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,OAAL,CAAa,MAAb,EAAqB,SAAC,KAAD;iBACrC,KAAK,CAAC,MAAN,CAAa,CAAb,CAAe,CAAC,WAAhB,CAAA;QADqC,CAArB,EADpB;;MAIA,OAAA,GAAU,GAAG,CAAC,eAAJ,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,IAAI,CAAC,IAAnC;aACV,GAAG,CAAC,oBAAJ,CAAyB,IAAzB,EAA+B,OAA/B;IAtBY;IAwBd,KAAA,GAAQ,SAAC,IAAD,EAAO,EAAP;AAEN,UAAA;MAAA,QAAA,GAAW,WAAA,CAAY,IAAZ,EAAkB,OAAlB;MACX,IAAsB,QAAA,YAAoB,KAA1C;AAAA,eAAO,EAAA,CAAG,QAAH,EAAP;;MAEA,IAAI,CAAC,QAAL,GAAoB,IAAA,MAAA,CAAO,QAAP;MACpB,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,gBAAL,CAAsB,KAAtB;aAEZ,QAAA,CAAS,IAAT,EAAe,IAAf;IARM;WAUR,GAAA,CAAI,KAAJ;EAzCe;AA/BjB","file":"misc/gulp/gulp-jison.js","sourceRoot":"/source/","sourcesContent":["###\nÂ© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\nfs = require('fs')\npath = require('path')\nmap = require 'map-stream'\nutil = require('gulp-util')\nPluginError = util.PluginError\ncli = require('jison/lib/cli')\n\n###\n# # Gulp Jison\n# ------------\n#\n###\n\nPLUGIN_NAME = 'gulp-jison'\n\nmodule.exports = (options) ->\n\n  # getting raw files\n  lex = null\n  if options.lexfile?\n    lex = fs.readFileSync path.normalize(options.lexfile), 'utf8'\n\n  processFile = (file, options) ->\n\n    opts = {}\n    opts[key] = value for own key, value of options if options?\n\n    opts.file = file.path\n    raw = file.contents.toString()\n\n    # making best guess at json mode\n    opts.json = path.extname(opts.file) is '.json' unless opts.json\n\n    # setting output file name and module name based on input file name\n    # if they aren't specified.\n    name = path.basename(opts.outfile ? opts.file).replace /\\..*$/g, ''\n\n    opts.outfile = \"#{name}.js\" unless opts.outfile?\n\n    if not opts.moduleName? and name\n      opts.moduleName = name.replace /-\\w/g, (match) ->\n        match.charAt(1).toUpperCase()\n\n    grammar = cli.processGrammars raw, lex, opts.json\n    cli.generateParserString opts, grammar\n\n  jison = (file, cb) ->\n\n    contents = processFile(file, options)\n    return cb contents if contents instanceof Error\n\n    file.contents = new Buffer contents\n    file.path = util.replaceExtension '.js'\n\n    callback null, file\n\n  map jison\n"]}