{"version":3,"sources":["misc/gulp/gulp-jison-parser.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;AAAA;AAAA,MAAA;;EAgBA,GAAA,GAAM,OAAA,CAAQ,YAAR;;EACN,IAAA,GAAO,OAAA,CAAQ,WAAR;;EACP,WAAA,GAAc,IAAI,CAAC;;;AAEnB;;;;;;EAMA,WAAA,GAAc;;EAEd,MAAM,CAAC,OAAP,GAAiB,SAAC,OAAD;AACf,QAAA;IAAA,OAAA,GAAU,OAAO,CAAC;IAElB,MAAA,GAAS,SAAC,IAAD,EAAO,EAAP;AAIP,UAAA;MAAA,CAAA,GAAI,OAAO,CAAC,YAAR,CAAqB,IAAI,CAAC,IAA1B;MACJ,IAAe,CAAA,YAAa,KAA5B;AAAA,eAAO,EAAA,CAAG,CAAH,EAAP;;MAEA,IAAG,sBAAH;QACE,IAAA,GAAO,OAAO,CAAC,cAAR,CAAuB;UAAC,QAAA,EAAU,SAAA;mBAAG,CAAC,CAAC,QAAF,CAAW,OAAX;UAAH,CAAX;SAAvB,EADT;OAAA,MAAA;QAGE,IAAA,GAAO,CAAC,CAAC,QAAF,CAAW,OAAX,EAHT;;MAIA,IAAkB,IAAA,YAAgB,KAAlC;AAAA,eAAO,EAAA,CAAG,IAAH,EAAP;;MAEA,IAAG,wBAAH;QACE,OAAA,GAAU,IAAI,CAAC,KAAL,CAAW,4FAAX;QACV,IAAG,OAAH;UACE,IAAA,GAAO,IAAI,CAAC,OAAL,CAAa,OAAQ,CAAA,CAAA,CAArB,EAAyB,6BAAA,GAIzB,OAAQ,CAAA,CAAA,CAJiB,GAId,gBAJc,GAMrB,CAAC,OAAQ,CAAA,CAAA,CAAE,CAAC,KAAX,CAAiB,IAAjB,CAAsB,CAAC,IAAvB,CAA4B,UAA5B,CAAuC,CAAC,OAAxC,CAAgD,WAAhD,EAA6D,KAA7D,CAAD,CANqB,GAM+C,WANxE,EADT;SAFF;;MAcA,IAAI,CAAC,QAAL,GAAoB,IAAA,MAAA,CAAO,IAAP;MACpB,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,gBAAL,CAAsB,IAAI,CAAC,IAA3B,EAAiC,KAAjC;aAEZ,EAAA,CAAG,IAAH,EAAS,IAAT;IA9BO;AAgCT,WAAO,GAAA,CAAI,MAAJ;EAnCQ;AA5BjB","file":"gulp-jison-parser.js","sourcesContent":["###\nÂ© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\nmap = require 'map-stream'\nutil = require 'gulp-util'\nPluginError = util.PluginError\n\n###\n# # Gulp Jison Parser\n# -------------------\n#\n###\n\nPLUGIN_NAME = 'gulp-jison-parser'\n\nmodule.exports = (options) ->\n  Grammar = options.grammar\n\n  parser = (file, cb) ->\n\n    # util.log file, options\n\n    p = Grammar.createParser(file.path)\n    return cb p if p instanceof Error\n\n    if options.goatee?\n      data = Grammar.generateParser {generate: -> p.generate(options)}\n    else\n      data = p.generate(options)\n    return cb data if data instanceof Error\n\n    if options.beautify?\n      comment = data.match /\\/\\*\\s*(Returns a Parser object of the following structure:)[^\\*]*(Parser:[^\\*]*\\})\\s*\\*\\//\n      if comment\n        data = data.replace comment[0], \"\"\"\n\n          /** ------------\n           *\n           * #{comment[1]}\n           *\n           *      #{comment[2].split('\\n').join('\\n *    ').replace /\\*[ ]+\\n/g, '*\\n'}\n           *\n           */\n          \"\"\"\n\n    file.contents = new Buffer data\n    file.path = util.replaceExtension file.path, '.js'\n\n    cb null, file\n\n  return map parser\n"]}