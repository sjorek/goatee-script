{"version":3,"sources":["misc/gulp/gulp-taskqueue.coffee"],"names":[],"mappings":"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","file":"misc/gulp/gulp-taskqueue.js","sourceRoot":"/source/","sourcesContent":["\n\ngulp = require 'gulp'\n\ndel = require 'del'\n# logger = require 'gulp-logger'\nutil = require 'gulp-util'\n\nexports = exports ? this\n\nexports.createDependencyLog = () ->\n  {\n    clean: []\n    transpile: []\n    doc: []\n    publish: []\n    watch: []\n  }\n\nexports.cloneObject = _cloneObject = (obj) ->\n  return obj if obj is null or typeof (obj) isnt \"object\"\n  temp = new obj.constructor()\n  for own key, val of obj\n    temp[key] = _cloneObject(val)\n  temp\n\n\n### ---------\ncreate task queue definitions\n\n@function buildQueue\n@param {String} name\n@param {Object<queue:Array,clean:Array,watch:Array>} deps\n@param {Function} load\n@param {Function} worker\n@return {Object} a dependency log object\n@private\n###\nexports.build = (name, deps, load, worker) ->\n  filename = \"#{name.replace(/:/,'-')}\"\n  queue = load filename\n  cleandeps = []\n  watchdeps = []\n  deps.queue = []\n\n  for own suffix, config of queue\n    do ->\n      taskconfig = _cloneObject config\n      taskname = \"#{name}:#{suffix}\"\n      taskdeps = taskconfig.deps ? []\n      taskcleandeps = []\n      taskwatchdeps = []\n\n      deps[taskconfig.queue ? 'queue'].push taskname\n\n      for assets, index in taskconfig.assets\n        for own destination, source of assets\n          subtaskname = \"#{taskname}:#{index}\"\n          taskdeps.push subtaskname\n\n          if taskconfig.watch?\n            watch = \"#{subtaskname}:watch\"\n            taskwatchdeps.push watch\n            gulp.task watch, ->\n              util.log watch, source\n              gulp.watch source, [subtaskname]\n\n          gulp.task subtaskname, \\\n            worker(source, destination, taskname, taskconfig)\n\n      gulp.task taskname, taskdeps, -> util.log taskconfig.title\n\n      if taskconfig.clean?\n        clean = \"#{taskname}:clean\"\n        taskcleandeps.push clean\n        gulp.task clean, ->\n          util.log clean, taskconfig.clean\n          del taskconfig.clean\n\n      cleandeps.push clean for clean in taskcleandeps\n\n      if 0 < taskwatchdeps.length\n        watch = \"#{taskname}:watch\"\n        watchdeps.push watch\n        gulp.task watch, taskwatchdeps\n\n  if 0 < cleandeps.length\n    clean = \"#{name}:clean\"\n    deps.clean.push clean\n    gulp.task clean, cleandeps\n\n  if 0 < watchdeps.length\n    watch = \"#{name}:watch\"\n    deps.watch.push watch\n    gulp.task watch, watchdeps\n\n  deps\n"]}