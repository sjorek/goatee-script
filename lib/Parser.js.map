{"version":3,"sources":["Parser.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;AAAA;AAAA,MAAA;;AAgBA;IACE,OAAA,GAAU,OAAA,CAAQ,cAAR,EADZ;GAAA,aAAA;IAGE,OAAA,GAAU,KAHZ;;;EAKA,IAAG,OAAA,KAAW,IAAd;IAEE,OAAA,GAAU,OAAA,CAAQ,WAAR;IAEV,OAAA,sGAA4B;;AAE5B;;;;;;;;AAQA;;;;;;IAMA,OAAO,CAAC,MAAR,GAAiB,MAAA,GAAS,OAAO,CAAC,YAAR,CAAA;;AAE1B;;;;;IAKA,OAAO,CAAC,MAAR,GAAiB,MAAM,CAAC;;AAExB;;;;;IAKA,OAAO,CAAC,KAAR,GAAiB,SAAA;aAAM,MAAM,CAAC,KAAK,CAAC,KAAb,CAAmB,MAAnB,EAA2B,SAA3B;IAAN;;AAEjB;;;;;;IAMA,OAAO,CAAC,IAAR,GAAiB,SAAC,IAAD;AACf,UAAA;MAAA,IAAG,CAAI,IAAK,CAAA,CAAA,CAAZ;QACE,OAAO,CAAC,GAAR,CAAY,SAAA,GAAU,IAAK,CAAA,CAAA,CAAf,GAAkB,OAA9B;QACA,OAAO,CAAC,IAAR,CAAa,CAAb,EAFF;;MAGA,MAAA,GAAS,OAAA,CAAQ,IAAR,CAAa,CAAC,YAAd,CACP,OAAA,CAAQ,MAAR,CAAe,CAAC,SAAhB,CAA0B,IAAK,CAAA,CAAA,CAA/B,CADO,EAC6B,MAD7B;aAGT,MAAM,CAAC,KAAP,CAAa,MAAb;IAPe,EA1CnB;;;EAmDA,MAAM,CAAC,OAAP,GAAiB;;EAGjB,IAAI,MAAA,KAAY,MAAZ,IAAyB,OAAO,CAAC,IAAR,KAAgB,MAA7C;IACE,OAAO,CAAC,IAAR,CAAa,OAAO,CAAC,IAAI,CAAC,KAAb,CAAmB,CAAnB,CAAb,EADF;;AA3EA","file":"Parser.js","sourcesContent":["###\n© Copyright 2013-2017 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\ntry\n  exports = require './ParserImpl'\ncatch\n  exports = null\n\nif exports is null\n\n  Grammar = require './Grammar'\n\n  exports = module?.exports ? this\n\n  ###\n  # #Parser\n  # -------------\n  #\n  # A thin compatibillity layer providing an\n  # “on-the-fly” generated goatee-script parser.\n  ###\n\n  ###*\n  #  -------------\n  # @property parser\n  # @type {Parser}\n  # @static\n  ###\n  exports.parser = parser = Grammar.createParser()\n\n  ###*\n  #  -------------\n  # @class Parser\n  # @namespace GoateeScript\n  ###\n  exports.Parser = parser.Parser\n\n  ###*\n  #  -------------\n  # @function parse\n  # @static\n  ###\n  exports.parse  = () -> parser.parse.apply(parser, arguments)\n\n  ###*\n  #  -------------\n  # @function main\n  # @param {Array} args\n  # @static\n  ###\n  exports.main   = (args) ->\n    if not args[1]\n      console.log \"Usage: #{args[0]} FILE\"\n      process.exit 1\n    source = require('fs').readFileSync(\n      require('path').normalize(args[1]), \"utf8\"\n    )\n    parser.parse(source)\n\nmodule.exports = exports\n\n# execute main automatically\nif (module isnt undefined && require.main is module)\n  exports.main process.argv.slice(1)\n"]}