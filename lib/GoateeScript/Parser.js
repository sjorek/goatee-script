/* Goatee Expression Parser */
(function() {
/* parser generated by jison 0.4.6 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"EOF":4,"Statements":5,"Seperator":6,"Seperated":7,";":8,"Statement":9,"Expression":10,"Conditional":11,"Parameters":12,",":13,"Key":14,"Primitive":15,"REFERENCE":16,"KeyValues":17,":":18,"Object":19,"{":20,"}":21,"Elements":22,"Array":23,"[":24,"]":25,"Block":26,"IF":27,"(":28,")":29,"ELSE":30,"IncDec":31,"++":32,"--":33,"Assignment":34,"-=":35,"+=":36,"*=":37,"/=":38,"%=":39,"^=":40,">>>=":41,">>=":42,"<<=":43,"&=":44,"|=":45,"=":46,"NUMBER":47,"+":48,"-":49,"NULL":50,"TRUE":51,"FALSE":52,"STRING":53,"Operation":54,"*":55,"/":56,"%":57,"!":58,"<=":59,">=":60,"<":61,">":62,"===":63,"!==":64,"==":65,"!=":66,"&&":67,"||":68,"~":69,">>>":70,">>":71,"<<":72,"&":73,"|":74,"^":75,"Literal":76,"Scope":77,"CONTEXT":78,"Reference":79,"Resolve":80,".":81,"Property":82,"List":83,"Group":84,"?":85,"$accept":0,"$end":1},
terminals_: {2:"error",4:"EOF",8:";",13:",",16:"REFERENCE",18:":",20:"{",21:"}",24:"[",25:"]",27:"IF",28:"(",29:")",30:"ELSE",32:"++",33:"--",35:"-=",36:"+=",37:"*=",38:"/=",39:"%=",40:"^=",41:">>>=",42:">>=",43:"<<=",44:"&=",45:"|=",46:"=",47:"NUMBER",48:"+",49:"-",50:"NULL",51:"TRUE",52:"FALSE",53:"STRING",55:"*",56:"/",57:"%",58:"!",59:"<=",60:">=",61:"<",62:">",63:"===",64:"!==",65:"==",66:"!=",67:"&&",68:"||",69:"~",70:">>>",71:">>",72:"<<",73:"&",74:"|",75:"^",78:"CONTEXT",81:".",85:"?"},
productions_: [0,[3,1],[3,2],[5,3],[5,2],[5,2],[5,1],[5,1],[6,1],[6,2],[7,1],[7,3],[9,1],[9,1],[12,0],[12,1],[12,3],[14,1],[14,1],[17,3],[17,3],[19,2],[19,3],[22,0],[22,1],[22,3],[23,3],[26,3],[11,7],[11,7],[11,5],[31,1],[31,1],[34,2],[34,2],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[34,3],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,1],[54,3],[54,3],[54,3],[54,3],[54,3],[54,2],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[54,2],[54,3],[54,3],[54,3],[54,3],[54,3],[54,3],[76,1],[76,1],[76,1],[77,1],[79,1],[79,2],[79,1],[80,1],[80,3],[82,3],[83,1],[83,3],[84,3],[10,5],[10,4],[10,4],[10,1],[10,1],[10,1],[10,1],[10,1],[10,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:return new yy.Expression('primitive', [void 0]);
break;
case 2:return (function () {
          if ($$[$0-1] === yy.Empty) {
            return new yy.Expression('primitive', [void 0]);
          } else {
            return $$[$0-1];
          }
        }());
break;
case 3:this.$ = $$[$0-1];
break;
case 4:this.$ = $$[$0];
break;
case 5:this.$ = $$[$0-1];
break;
case 6:this.$ = $$[$0];
break;
case 7:this.$ = $$[$0];
break;
case 8:this.$ = yy.Empty;
break;
case 9:this.$ = yy.Empty;
break;
case 10:this.$ = $$[$0];
break;
case 11:this.$ = (function () {
          if ($$[$0-2] === yy.Empty) {
            if ($$[$0] === yy.Empty) {
              return yy.Empty;
            } else {
              return new yy.Expression('block', [$$[$0]]);
            }
          } else if ($$[$0-2].operator.name === 'block') {
            if ($$[$0] !== yy.Empty) {
              $$[$0-2].parameters.push($$[$0]);
            }
            return $$[$0-2];
          } else if ($$[$0] === yy.Empty) {
            return new yy.Expression('block', [$$[$0-2]]);
          } else {
            return new yy.Expression('block', [$$[$0-2], $$[$0]]);
          }
        }());
break;
case 12:this.$ = $$[$0];
break;
case 13:this.$ = $$[$0];
break;
case 14:this.$ = [];
break;
case 15:this.$ = [$$[$0]];
break;
case 16:this.$ = $$[$0-2].concat($$[$0]);
break;
case 17:this.$ = $$[$0];
break;
case 18:this.$ = $$[$0];
break;
case 19:this.$ = [$$[$0-2], $$[$0]];
break;
case 20:this.$ = $$[$0-2].concat($$[$0]);
break;
case 21:this.$ = new yy.Expression('object', []);
break;
case 22:this.$ = new yy.Expression('object', $$[$0-1]);
break;
case 23:this.$ = [];
break;
case 24:this.$ = [$$[$0]];
break;
case 25:this.$ = $$[$0-2].concat($$[$0].length === 0 ? [void 0] : $$[$0]);
break;
case 26:this.$ = new yy.Expression('array', $$[$0-1]);
break;
case 27:this.$ = (function () {
          if ($$[$0-1] === yy.Empty) {
            return new yy.Expression('primitive', [void 0]);
          } else {
            return $$[$0-1];
          }
        }());
break;
case 28:this.$ = new yy.Expression('if', [$$[$0-4], $$[$0-2], $$[$0]]);
break;
case 29:this.$ = new yy.Expression('if', [$$[$0-4], $$[$0-2], $$[$0]]);
break;
case 30:this.$ = new yy.Expression('if', [$$[$0-2], $$[$0]]);
break;
case 31:this.$ = $$[$0];
break;
case 32:this.$ = $$[$0];
break;
case 33:this.$ = new yy.Expression($$[$0-1], [$$[$0], 0]);
break;
case 34:this.$ = new yy.Expression($$[$0], [$$[$0-1], 1]);
break;
case 35:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 36:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 37:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 38:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 39:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 40:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 41:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 42:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 43:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 44:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 45:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 46:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 47:this.$ = Number($$[$0]);
break;
case 48:this.$ = +Number($$[$0]);
break;
case 49:this.$ = -Number($$[$0]);
break;
case 50:this.$ = null;
break;
case 51:this.$ = true;
break;
case 52:this.$ = false;
break;
case 53:this.$ = yy.escapeString($$[$0]);
break;
case 54:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 55:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 56:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 57:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 58:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 59:this.$ = new yy.Expression('!', [$$[$0]]);
break;
case 60:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 61:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 62:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 63:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 64:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 65:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 66:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 67:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 68:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 69:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 70:this.$ = new yy.Expression('~', [$$[$0]]);
break;
case 71:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 72:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 73:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 74:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 75:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 76:this.$ = new yy.Expression($$[$0-1], [$$[$0-2], $$[$0]]);
break;
case 77:this.$ = $$[$0];
break;
case 78:this.$ = $$[$0];
break;
case 79:this.$ = new yy.Expression('primitive', [$$[$0]]);
break;
case 80:this.$ = new yy.Expression('context', [$$[$0][0]]);
break;
case 81:this.$ = new yy.Expression('reference', [$$[$0]]);
break;
case 82:this.$ = new yy.Expression('.', [$$[$0-1], new yy.Expression('resolve', [$$[$0]])]);
break;
case 83:this.$ = $$[$0];
break;
case 84:this.$ = new yy.Expression('resolve', [$$[$0]]);
break;
case 85:this.$ = new yy.Expression('.', [$$[$0-2], new yy.Expression('resolve', [$$[$0]])]);
break;
case 86:this.$ = new yy.Expression('.', [$$[$0-2], $$[$0]]);
break;
case 87:this.$ = [$$[$0]];
break;
case 88:this.$ = $$[$0-2].concat($$[$0]);
break;
case 89:this.$ = new yy.Expression('group', $$[$0-1]);
break;
case 90:this.$ = new yy.Expression('?:', [$$[$0-4], $$[$0-2], $$[$0]]);
break;
case 91:this.$ = new yy.Expression('()', [$$[$0-3]].concat($$[$0-1]));
break;
case 92:this.$ = new yy.Expression('[]', [$$[$0-3], $$[$0-1]]);
break;
case 93:this.$ = $$[$0];
break;
case 94:this.$ = $$[$0];
break;
case 95:this.$ = $$[$0];
break;
case 96:this.$ = $$[$0];
break;
case 97:this.$ = $$[$0];
break;
case 98:this.$ = $$[$0];
break;
}
},
table: [{3:1,4:[1,2],5:3,6:4,7:5,8:[1,6],9:7,10:8,11:9,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],27:[1,16],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{1:[3]},{1:[2,1]},{4:[1,38]},{4:[2,7],7:39,8:[1,40],9:7,10:8,11:9,15:22,16:[1,18],19:20,20:[1,29],21:[2,7],23:21,24:[1,30],27:[1,16],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,6],6:41,8:[1,6],21:[2,6]},{4:[2,8],8:[2,8],16:[2,8],20:[2,8],21:[2,8],24:[2,8],27:[2,8],28:[2,8],32:[2,8],33:[2,8],47:[2,8],48:[2,8],49:[2,8],50:[2,8],51:[2,8],52:[2,8],53:[2,8],58:[2,8],69:[2,8],78:[2,8]},{4:[2,10],8:[2,10],21:[2,10]},{4:[2,12],8:[2,12],21:[2,12],24:[1,44],28:[1,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,13],8:[2,13],21:[2,13]},{4:[2,93],8:[2,93],13:[2,93],18:[2,93],21:[2,93],24:[2,93],25:[2,93],28:[2,93],29:[2,93],48:[2,93],49:[2,93],55:[2,93],56:[2,93],57:[2,93],59:[2,93],60:[2,93],61:[2,93],62:[2,93],63:[2,93],64:[2,93],65:[2,93],66:[2,93],67:[2,93],68:[2,93],70:[2,93],71:[2,93],72:[2,93],73:[2,93],74:[2,93],75:[2,93],81:[2,93],85:[2,93]},{4:[2,94],8:[2,94],13:[2,94],18:[2,94],21:[2,94],24:[2,94],25:[2,94],28:[2,94],29:[2,94],48:[2,94],49:[2,94],55:[2,94],56:[2,94],57:[2,94],59:[2,94],60:[2,94],61:[2,94],62:[2,94],63:[2,94],64:[2,94],65:[2,94],66:[2,94],67:[2,94],68:[2,94],70:[2,94],71:[2,94],72:[2,94],73:[2,94],74:[2,94],75:[2,94],81:[2,94],85:[2,94]},{4:[2,95],8:[2,95],13:[2,95],18:[2,95],21:[2,95],24:[2,95],25:[2,95],28:[2,95],29:[2,95],48:[2,95],49:[2,95],55:[2,95],56:[2,95],57:[2,95],59:[2,95],60:[2,95],61:[2,95],62:[2,95],63:[2,95],64:[2,95],65:[2,95],66:[2,95],67:[2,95],68:[2,95],70:[2,95],71:[2,95],72:[2,95],73:[2,95],74:[2,95],75:[2,95],81:[2,95],85:[2,95]},{4:[2,96],8:[2,96],13:[2,96],18:[2,96],21:[2,96],24:[2,96],25:[2,96],28:[2,96],29:[2,96],48:[2,96],49:[2,96],55:[2,96],56:[2,96],57:[2,96],59:[2,96],60:[2,96],61:[2,96],62:[2,96],63:[2,96],64:[2,96],65:[2,96],66:[2,96],67:[2,96],68:[2,96],70:[2,96],71:[2,96],72:[2,96],73:[2,96],74:[2,96],75:[2,96],81:[2,96],85:[2,96]},{4:[2,97],8:[2,97],13:[2,97],18:[2,97],21:[2,97],24:[2,97],25:[2,97],28:[2,97],29:[2,97],48:[2,97],49:[2,97],55:[2,97],56:[2,97],57:[2,97],59:[2,97],60:[2,97],61:[2,97],62:[2,97],63:[2,97],64:[2,97],65:[2,97],66:[2,97],67:[2,97],68:[2,97],70:[2,97],71:[2,97],72:[2,97],73:[2,97],74:[2,97],75:[2,97],81:[2,97],85:[2,97]},{4:[2,98],8:[2,98],13:[2,98],18:[2,98],21:[2,98],24:[2,98],25:[2,98],28:[2,98],29:[2,98],48:[2,98],49:[2,98],55:[2,98],56:[2,98],57:[2,98],59:[2,98],60:[2,98],61:[2,98],62:[2,98],63:[2,98],64:[2,98],65:[2,98],66:[2,98],67:[2,98],68:[2,98],70:[2,98],71:[2,98],72:[2,98],73:[2,98],74:[2,98],75:[2,98],81:[2,98],85:[2,98]},{28:[1,67]},{16:[1,68]},{4:[2,81],8:[2,81],13:[2,81],18:[2,81],21:[2,81],24:[2,81],25:[2,81],28:[2,81],29:[2,81],31:69,32:[1,26],33:[1,27],35:[1,70],36:[1,71],37:[1,72],38:[1,73],39:[1,74],40:[1,75],41:[1,76],42:[1,77],43:[1,78],44:[1,79],45:[1,80],46:[1,81],48:[2,81],49:[2,81],55:[2,81],56:[2,81],57:[2,81],59:[2,81],60:[2,81],61:[2,81],62:[2,81],63:[2,81],64:[2,81],65:[2,81],66:[2,81],67:[2,81],68:[2,81],70:[2,81],71:[2,81],72:[2,81],73:[2,81],74:[2,81],75:[2,81],81:[2,81],85:[2,81]},{4:[2,83],8:[2,83],13:[2,83],16:[1,82],18:[2,83],21:[2,83],24:[2,83],25:[2,83],28:[2,83],29:[2,83],48:[2,83],49:[2,83],55:[2,83],56:[2,83],57:[2,83],59:[2,83],60:[2,83],61:[2,83],62:[2,83],63:[2,83],64:[2,83],65:[2,83],66:[2,83],67:[2,83],68:[2,83],70:[2,83],71:[2,83],72:[2,83],73:[2,83],74:[2,83],75:[2,83],81:[2,83],85:[2,83]},{4:[2,77],8:[2,77],13:[2,77],18:[2,77],21:[2,77],24:[2,77],25:[2,77],28:[2,77],29:[2,77],48:[2,77],49:[2,77],55:[2,77],56:[2,77],57:[2,77],59:[2,77],60:[2,77],61:[2,77],62:[2,77],63:[2,77],64:[2,77],65:[2,77],66:[2,77],67:[2,77],68:[2,77],70:[2,77],71:[2,77],72:[2,77],73:[2,77],74:[2,77],75:[2,77],81:[2,77],85:[2,77]},{4:[2,78],8:[2,78],13:[2,78],18:[2,78],21:[2,78],24:[2,78],25:[2,78],28:[2,78],29:[2,78],48:[2,78],49:[2,78],55:[2,78],56:[2,78],57:[2,78],59:[2,78],60:[2,78],61:[2,78],62:[2,78],63:[2,78],64:[2,78],65:[2,78],66:[2,78],67:[2,78],68:[2,78],70:[2,78],71:[2,78],72:[2,78],73:[2,78],74:[2,78],75:[2,78],81:[2,78],85:[2,78]},{4:[2,79],8:[2,79],13:[2,79],18:[2,79],21:[2,79],24:[2,79],25:[2,79],28:[2,79],29:[2,79],48:[2,79],49:[2,79],55:[2,79],56:[2,79],57:[2,79],59:[2,79],60:[2,79],61:[2,79],62:[2,79],63:[2,79],64:[2,79],65:[2,79],66:[2,79],67:[2,79],68:[2,79],70:[2,79],71:[2,79],72:[2,79],73:[2,79],74:[2,79],75:[2,79],81:[2,79],85:[2,79]},{10:83,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:84,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:86,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,83:85,84:15},{4:[2,31],8:[2,31],13:[2,31],16:[2,31],18:[2,31],21:[2,31],24:[2,31],25:[2,31],28:[2,31],29:[2,31],48:[2,31],49:[2,31],55:[2,31],56:[2,31],57:[2,31],59:[2,31],60:[2,31],61:[2,31],62:[2,31],63:[2,31],64:[2,31],65:[2,31],66:[2,31],67:[2,31],68:[2,31],70:[2,31],71:[2,31],72:[2,31],73:[2,31],74:[2,31],75:[2,31],81:[2,31],85:[2,31]},{4:[2,32],8:[2,32],13:[2,32],16:[2,32],18:[2,32],21:[2,32],24:[2,32],25:[2,32],28:[2,32],29:[2,32],48:[2,32],49:[2,32],55:[2,32],56:[2,32],57:[2,32],59:[2,32],60:[2,32],61:[2,32],62:[2,32],63:[2,32],64:[2,32],65:[2,32],66:[2,32],67:[2,32],68:[2,32],70:[2,32],71:[2,32],72:[2,32],73:[2,32],74:[2,32],75:[2,32],81:[2,32],85:[2,32]},{4:[2,80],8:[2,80],13:[2,80],16:[2,80],18:[2,80],21:[2,80],24:[2,80],25:[2,80],28:[2,80],29:[2,80],48:[2,80],49:[2,80],55:[2,80],56:[2,80],57:[2,80],59:[2,80],60:[2,80],61:[2,80],62:[2,80],63:[2,80],64:[2,80],65:[2,80],66:[2,80],67:[2,80],68:[2,80],70:[2,80],71:[2,80],72:[2,80],73:[2,80],74:[2,80],75:[2,80],81:[2,80],85:[2,80]},{14:89,15:90,16:[1,91],17:88,21:[1,87],47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37]},{10:93,13:[2,23],15:22,16:[1,18],19:20,20:[1,29],22:92,23:21,24:[1,30],25:[2,23],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,47],8:[2,47],13:[2,47],18:[2,47],21:[2,47],24:[2,47],25:[2,47],28:[2,47],29:[2,47],48:[2,47],49:[2,47],55:[2,47],56:[2,47],57:[2,47],59:[2,47],60:[2,47],61:[2,47],62:[2,47],63:[2,47],64:[2,47],65:[2,47],66:[2,47],67:[2,47],68:[2,47],70:[2,47],71:[2,47],72:[2,47],73:[2,47],74:[2,47],75:[2,47],81:[2,47],85:[2,47]},{47:[1,94]},{47:[1,95]},{4:[2,50],8:[2,50],13:[2,50],18:[2,50],21:[2,50],24:[2,50],25:[2,50],28:[2,50],29:[2,50],48:[2,50],49:[2,50],55:[2,50],56:[2,50],57:[2,50],59:[2,50],60:[2,50],61:[2,50],62:[2,50],63:[2,50],64:[2,50],65:[2,50],66:[2,50],67:[2,50],68:[2,50],70:[2,50],71:[2,50],72:[2,50],73:[2,50],74:[2,50],75:[2,50],81:[2,50],85:[2,50]},{4:[2,51],8:[2,51],13:[2,51],18:[2,51],21:[2,51],24:[2,51],25:[2,51],28:[2,51],29:[2,51],48:[2,51],49:[2,51],55:[2,51],56:[2,51],57:[2,51],59:[2,51],60:[2,51],61:[2,51],62:[2,51],63:[2,51],64:[2,51],65:[2,51],66:[2,51],67:[2,51],68:[2,51],70:[2,51],71:[2,51],72:[2,51],73:[2,51],74:[2,51],75:[2,51],81:[2,51],85:[2,51]},{4:[2,52],8:[2,52],13:[2,52],18:[2,52],21:[2,52],24:[2,52],25:[2,52],28:[2,52],29:[2,52],48:[2,52],49:[2,52],55:[2,52],56:[2,52],57:[2,52],59:[2,52],60:[2,52],61:[2,52],62:[2,52],63:[2,52],64:[2,52],65:[2,52],66:[2,52],67:[2,52],68:[2,52],70:[2,52],71:[2,52],72:[2,52],73:[2,52],74:[2,52],75:[2,52],81:[2,52],85:[2,52]},{4:[2,53],8:[2,53],13:[2,53],18:[2,53],21:[2,53],24:[2,53],25:[2,53],28:[2,53],29:[2,53],48:[2,53],49:[2,53],55:[2,53],56:[2,53],57:[2,53],59:[2,53],60:[2,53],61:[2,53],62:[2,53],63:[2,53],64:[2,53],65:[2,53],66:[2,53],67:[2,53],68:[2,53],70:[2,53],71:[2,53],72:[2,53],73:[2,53],74:[2,53],75:[2,53],81:[2,53],85:[2,53]},{1:[2,2]},{4:[2,4],6:96,8:[1,6],21:[2,4]},{4:[2,9],8:[2,9],16:[2,9],20:[2,9],21:[2,9],24:[2,9],27:[2,9],28:[2,9],32:[2,9],33:[2,9],47:[2,9],48:[2,9],49:[2,9],50:[2,9],51:[2,9],52:[2,9],53:[2,9],58:[2,9],69:[2,9],78:[2,9]},{4:[2,5],8:[1,40],9:97,10:8,11:9,15:22,16:[1,18],19:20,20:[1,29],21:[2,5],23:21,24:[1,30],27:[1,16],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:98,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:100,12:99,13:[2,14],15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],29:[2,14],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:101,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:102,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:103,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:104,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:105,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:106,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:107,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:108,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:109,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:110,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:111,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:112,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:113,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:114,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:115,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:116,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:117,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:118,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:119,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:120,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:121,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:122,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{16:[1,124],80:123},{10:125,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,33],8:[2,33],13:[2,33],18:[2,33],21:[2,33],24:[2,33],25:[2,33],28:[2,33],29:[2,33],48:[2,33],49:[2,33],55:[2,33],56:[2,33],57:[2,33],59:[2,33],60:[2,33],61:[2,33],62:[2,33],63:[2,33],64:[2,33],65:[2,33],66:[2,33],67:[2,33],68:[2,33],70:[2,33],71:[2,33],72:[2,33],73:[2,33],74:[2,33],75:[2,33],81:[2,33],85:[2,33]},{4:[2,34],8:[2,34],13:[2,34],18:[2,34],21:[2,34],24:[2,34],25:[2,34],28:[2,34],29:[2,34],48:[2,34],49:[2,34],55:[2,34],56:[2,34],57:[2,34],59:[2,34],60:[2,34],61:[2,34],62:[2,34],63:[2,34],64:[2,34],65:[2,34],66:[2,34],67:[2,34],68:[2,34],70:[2,34],71:[2,34],72:[2,34],73:[2,34],74:[2,34],75:[2,34],81:[2,34],85:[2,34]},{10:126,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:127,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:128,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:129,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:130,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:131,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:132,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:133,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:134,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:135,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:136,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:137,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,82],8:[2,82],13:[2,82],18:[2,82],21:[2,82],24:[2,82],25:[2,82],28:[2,82],29:[2,82],48:[2,82],49:[2,82],55:[2,82],56:[2,82],57:[2,82],59:[2,82],60:[2,82],61:[2,82],62:[2,82],63:[2,82],64:[2,82],65:[2,82],66:[2,82],67:[2,82],68:[2,82],70:[2,82],71:[2,82],72:[2,82],73:[2,82],74:[2,82],75:[2,82],81:[2,82],85:[2,82]},{4:[2,59],8:[2,59],13:[2,59],18:[2,59],21:[2,59],24:[1,44],25:[2,59],28:[1,43],29:[2,59],48:[2,59],49:[2,59],55:[2,59],56:[2,59],57:[2,59],59:[2,59],60:[2,59],61:[2,59],62:[2,59],63:[2,59],64:[2,59],65:[2,59],66:[2,59],67:[2,59],68:[2,59],70:[2,59],71:[2,59],72:[2,59],73:[2,59],74:[2,59],75:[2,59],81:[1,66],85:[2,59]},{4:[2,70],8:[2,70],13:[2,70],18:[2,70],21:[2,70],24:[1,44],25:[2,70],28:[1,43],29:[2,70],48:[2,70],49:[2,70],55:[2,70],56:[2,70],57:[2,70],59:[2,70],60:[2,70],61:[2,70],62:[2,70],63:[2,70],64:[2,70],65:[2,70],66:[2,70],67:[2,70],68:[2,70],70:[2,70],71:[2,70],72:[2,70],73:[2,70],74:[2,70],75:[2,70],81:[1,66],85:[2,70]},{13:[1,139],29:[1,138]},{13:[2,87],24:[1,44],28:[1,43],29:[2,87],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,21],8:[2,21],13:[2,21],18:[2,21],21:[2,21],24:[2,21],25:[2,21],28:[2,21],29:[2,21],48:[2,21],49:[2,21],55:[2,21],56:[2,21],57:[2,21],59:[2,21],60:[2,21],61:[2,21],62:[2,21],63:[2,21],64:[2,21],65:[2,21],66:[2,21],67:[2,21],68:[2,21],70:[2,21],71:[2,21],72:[2,21],73:[2,21],74:[2,21],75:[2,21],81:[2,21],85:[2,21]},{13:[1,141],21:[1,140]},{18:[1,142]},{18:[2,17]},{18:[2,18]},{13:[1,144],25:[1,143]},{13:[2,24],24:[1,44],25:[2,24],28:[1,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,48],8:[2,48],13:[2,48],18:[2,48],21:[2,48],24:[2,48],25:[2,48],28:[2,48],29:[2,48],48:[2,48],49:[2,48],55:[2,48],56:[2,48],57:[2,48],59:[2,48],60:[2,48],61:[2,48],62:[2,48],63:[2,48],64:[2,48],65:[2,48],66:[2,48],67:[2,48],68:[2,48],70:[2,48],71:[2,48],72:[2,48],73:[2,48],74:[2,48],75:[2,48],81:[2,48],85:[2,48]},{4:[2,49],8:[2,49],13:[2,49],18:[2,49],21:[2,49],24:[2,49],25:[2,49],28:[2,49],29:[2,49],48:[2,49],49:[2,49],55:[2,49],56:[2,49],57:[2,49],59:[2,49],60:[2,49],61:[2,49],62:[2,49],63:[2,49],64:[2,49],65:[2,49],66:[2,49],67:[2,49],68:[2,49],70:[2,49],71:[2,49],72:[2,49],73:[2,49],74:[2,49],75:[2,49],81:[2,49],85:[2,49]},{4:[2,3],8:[1,40],9:97,10:8,11:9,15:22,16:[1,18],19:20,20:[1,29],21:[2,3],23:21,24:[1,30],27:[1,16],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,11],8:[2,11],21:[2,11]},{18:[1,145],24:[1,44],28:[1,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{13:[1,147],29:[1,146]},{13:[2,15],24:[1,44],28:[1,43],29:[2,15],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{24:[1,44],25:[1,148],28:[1,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,54],8:[2,54],13:[2,54],18:[2,54],21:[2,54],24:[1,44],25:[2,54],28:[1,43],29:[2,54],48:[2,54],49:[2,54],55:[2,54],56:[2,54],57:[2,54],59:[2,54],60:[2,54],61:[2,54],62:[2,54],63:[2,54],64:[2,54],65:[2,54],66:[2,54],67:[2,54],68:[2,54],70:[2,54],71:[2,54],72:[2,54],73:[2,54],74:[2,54],75:[2,54],81:[1,66],85:[2,54]},{4:[2,55],8:[2,55],13:[2,55],18:[2,55],21:[2,55],24:[1,44],25:[2,55],28:[1,43],29:[2,55],48:[2,55],49:[2,55],55:[2,55],56:[2,55],57:[2,55],59:[2,55],60:[2,55],61:[2,55],62:[2,55],63:[2,55],64:[2,55],65:[2,55],66:[2,55],67:[2,55],68:[2,55],70:[2,55],71:[2,55],72:[2,55],73:[2,55],74:[2,55],75:[2,55],81:[1,66],85:[2,55]},{4:[2,56],8:[2,56],13:[2,56],18:[2,56],21:[2,56],24:[1,44],25:[2,56],28:[1,43],29:[2,56],48:[2,56],49:[2,56],55:[2,56],56:[2,56],57:[2,56],59:[2,56],60:[2,56],61:[2,56],62:[2,56],63:[2,56],64:[2,56],65:[2,56],66:[2,56],67:[2,56],68:[2,56],70:[2,56],71:[2,56],72:[2,56],73:[2,56],74:[2,56],75:[2,56],81:[1,66],85:[2,56]},{4:[2,57],8:[2,57],13:[2,57],18:[2,57],21:[2,57],24:[1,44],25:[2,57],28:[1,43],29:[2,57],48:[2,57],49:[2,57],55:[1,45],56:[1,46],57:[1,47],59:[2,57],60:[2,57],61:[2,57],62:[2,57],63:[2,57],64:[2,57],65:[2,57],66:[2,57],67:[2,57],68:[2,57],70:[2,57],71:[2,57],72:[2,57],73:[2,57],74:[2,57],75:[2,57],81:[1,66],85:[2,57]},{4:[2,58],8:[2,58],13:[2,58],18:[2,58],21:[2,58],24:[1,44],25:[2,58],28:[1,43],29:[2,58],48:[2,58],49:[2,58],55:[1,45],56:[1,46],57:[1,47],59:[2,58],60:[2,58],61:[2,58],62:[2,58],63:[2,58],64:[2,58],65:[2,58],66:[2,58],67:[2,58],68:[2,58],70:[2,58],71:[2,58],72:[2,58],73:[2,58],74:[2,58],75:[2,58],81:[1,66],85:[2,58]},{4:[2,60],8:[2,60],13:[2,60],18:[2,60],21:[2,60],24:[1,44],25:[2,60],28:[1,43],29:[2,60],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,60],60:[2,60],61:[2,60],62:[2,60],63:[2,60],64:[2,60],65:[2,60],66:[2,60],67:[2,60],68:[2,60],70:[1,60],71:[1,61],72:[1,62],73:[2,60],74:[2,60],75:[2,60],81:[1,66],85:[2,60]},{4:[2,61],8:[2,61],13:[2,61],18:[2,61],21:[2,61],24:[1,44],25:[2,61],28:[1,43],29:[2,61],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,61],60:[2,61],61:[2,61],62:[2,61],63:[2,61],64:[2,61],65:[2,61],66:[2,61],67:[2,61],68:[2,61],70:[1,60],71:[1,61],72:[1,62],73:[2,61],74:[2,61],75:[2,61],81:[1,66],85:[2,61]},{4:[2,62],8:[2,62],13:[2,62],18:[2,62],21:[2,62],24:[1,44],25:[2,62],28:[1,43],29:[2,62],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,62],60:[2,62],61:[2,62],62:[2,62],63:[2,62],64:[2,62],65:[2,62],66:[2,62],67:[2,62],68:[2,62],70:[1,60],71:[1,61],72:[1,62],73:[2,62],74:[2,62],75:[2,62],81:[1,66],85:[2,62]},{4:[2,63],8:[2,63],13:[2,63],18:[2,63],21:[2,63],24:[1,44],25:[2,63],28:[1,43],29:[2,63],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,63],60:[2,63],61:[2,63],62:[2,63],63:[2,63],64:[2,63],65:[2,63],66:[2,63],67:[2,63],68:[2,63],70:[1,60],71:[1,61],72:[1,62],73:[2,63],74:[2,63],75:[2,63],81:[1,66],85:[2,63]},{4:[2,64],8:[2,64],13:[2,64],18:[2,64],21:[2,64],24:[1,44],25:[2,64],28:[1,43],29:[2,64],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[2,64],64:[2,64],65:[2,64],66:[2,64],67:[2,64],68:[2,64],70:[1,60],71:[1,61],72:[1,62],73:[2,64],74:[2,64],75:[2,64],81:[1,66],85:[2,64]},{4:[2,65],8:[2,65],13:[2,65],18:[2,65],21:[2,65],24:[1,44],25:[2,65],28:[1,43],29:[2,65],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[2,65],64:[2,65],65:[2,65],66:[2,65],67:[2,65],68:[2,65],70:[1,60],71:[1,61],72:[1,62],73:[2,65],74:[2,65],75:[2,65],81:[1,66],85:[2,65]},{4:[2,66],8:[2,66],13:[2,66],18:[2,66],21:[2,66],24:[1,44],25:[2,66],28:[1,43],29:[2,66],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[2,66],64:[2,66],65:[2,66],66:[2,66],67:[2,66],68:[2,66],70:[1,60],71:[1,61],72:[1,62],73:[2,66],74:[2,66],75:[2,66],81:[1,66],85:[2,66]},{4:[2,67],8:[2,67],13:[2,67],18:[2,67],21:[2,67],24:[1,44],25:[2,67],28:[1,43],29:[2,67],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[2,67],64:[2,67],65:[2,67],66:[2,67],67:[2,67],68:[2,67],70:[1,60],71:[1,61],72:[1,62],73:[2,67],74:[2,67],75:[2,67],81:[1,66],85:[2,67]},{4:[2,68],8:[2,68],13:[2,68],18:[2,68],21:[2,68],24:[1,44],25:[2,68],28:[1,43],29:[2,68],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[2,68],68:[2,68],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[2,68]},{4:[2,69],8:[2,69],13:[2,69],18:[2,69],21:[2,69],24:[1,44],25:[2,69],28:[1,43],29:[2,69],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[2,69],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[2,69]},{4:[2,71],8:[2,71],13:[2,71],18:[2,71],21:[2,71],24:[1,44],25:[2,71],28:[1,43],29:[2,71],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,71],60:[2,71],61:[2,71],62:[2,71],63:[2,71],64:[2,71],65:[2,71],66:[2,71],67:[2,71],68:[2,71],70:[2,71],71:[2,71],72:[2,71],73:[2,71],74:[2,71],75:[2,71],81:[1,66],85:[2,71]},{4:[2,72],8:[2,72],13:[2,72],18:[2,72],21:[2,72],24:[1,44],25:[2,72],28:[1,43],29:[2,72],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,72],60:[2,72],61:[2,72],62:[2,72],63:[2,72],64:[2,72],65:[2,72],66:[2,72],67:[2,72],68:[2,72],70:[2,72],71:[2,72],72:[2,72],73:[2,72],74:[2,72],75:[2,72],81:[1,66],85:[2,72]},{4:[2,73],8:[2,73],13:[2,73],18:[2,73],21:[2,73],24:[1,44],25:[2,73],28:[1,43],29:[2,73],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[2,73],60:[2,73],61:[2,73],62:[2,73],63:[2,73],64:[2,73],65:[2,73],66:[2,73],67:[2,73],68:[2,73],70:[2,73],71:[2,73],72:[2,73],73:[2,73],74:[2,73],75:[2,73],81:[1,66],85:[2,73]},{4:[2,74],8:[2,74],13:[2,74],18:[2,74],21:[2,74],24:[1,44],25:[2,74],28:[1,43],29:[2,74],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[2,74],68:[2,74],70:[1,60],71:[1,61],72:[1,62],73:[2,74],74:[2,74],75:[1,65],81:[1,66],85:[2,74]},{4:[2,75],8:[2,75],13:[2,75],18:[2,75],21:[2,75],24:[1,44],25:[2,75],28:[1,43],29:[2,75],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[2,75],68:[2,75],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[2,75],75:[1,65],81:[1,66],85:[2,75]},{4:[2,76],8:[2,76],13:[2,76],18:[2,76],21:[2,76],24:[1,44],25:[2,76],28:[1,43],29:[2,76],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[2,76],68:[2,76],70:[1,60],71:[1,61],72:[1,62],73:[2,76],74:[2,76],75:[2,76],81:[1,66],85:[2,76]},{4:[2,86],8:[2,86],13:[2,86],18:[2,86],21:[2,86],24:[2,86],25:[2,86],28:[2,86],29:[2,86],48:[2,86],49:[2,86],55:[2,86],56:[2,86],57:[2,86],59:[2,86],60:[2,86],61:[2,86],62:[2,86],63:[2,86],64:[2,86],65:[2,86],66:[2,86],67:[2,86],68:[2,86],70:[2,86],71:[2,86],72:[2,86],73:[2,86],74:[2,86],75:[2,86],81:[2,86],85:[2,86]},{4:[2,84],8:[2,84],13:[2,84],18:[2,84],21:[2,84],24:[2,84],25:[2,84],28:[2,84],29:[2,84],48:[2,84],49:[2,84],55:[2,84],56:[2,84],57:[2,84],59:[2,84],60:[2,84],61:[2,84],62:[2,84],63:[2,84],64:[2,84],65:[2,84],66:[2,84],67:[2,84],68:[2,84],70:[2,84],71:[2,84],72:[2,84],73:[2,84],74:[2,84],75:[2,84],81:[2,84],85:[2,84]},{24:[1,44],28:[1,43],29:[1,150],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,35],8:[2,35],13:[2,35],18:[2,35],21:[2,35],24:[1,44],25:[2,35],28:[1,43],29:[2,35],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,36],8:[2,36],13:[2,36],18:[2,36],21:[2,36],24:[1,44],25:[2,36],28:[1,43],29:[2,36],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,37],8:[2,37],13:[2,37],18:[2,37],21:[2,37],24:[1,44],25:[2,37],28:[1,43],29:[2,37],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,38],8:[2,38],13:[2,38],18:[2,38],21:[2,38],24:[1,44],25:[2,38],28:[1,43],29:[2,38],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,39],8:[2,39],13:[2,39],18:[2,39],21:[2,39],24:[1,44],25:[2,39],28:[1,43],29:[2,39],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,40],8:[2,40],13:[2,40],18:[2,40],21:[2,40],24:[1,44],25:[2,40],28:[1,43],29:[2,40],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,41],8:[2,41],13:[2,41],18:[2,41],21:[2,41],24:[1,44],25:[2,41],28:[1,43],29:[2,41],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,42],8:[2,42],13:[2,42],18:[2,42],21:[2,42],24:[1,44],25:[2,42],28:[1,43],29:[2,42],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,43],8:[2,43],13:[2,43],18:[2,43],21:[2,43],24:[1,44],25:[2,43],28:[1,43],29:[2,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,44],8:[2,44],13:[2,44],18:[2,44],21:[2,44],24:[1,44],25:[2,44],28:[1,43],29:[2,44],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,45],8:[2,45],13:[2,45],18:[2,45],21:[2,45],24:[1,44],25:[2,45],28:[1,43],29:[2,45],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,46],8:[2,46],13:[2,46],18:[2,46],21:[2,46],24:[1,44],25:[2,46],28:[1,43],29:[2,46],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,89],8:[2,89],13:[2,89],18:[2,89],21:[2,89],24:[2,89],25:[2,89],28:[2,89],29:[2,89],48:[2,89],49:[2,89],55:[2,89],56:[2,89],57:[2,89],59:[2,89],60:[2,89],61:[2,89],62:[2,89],63:[2,89],64:[2,89],65:[2,89],66:[2,89],67:[2,89],68:[2,89],70:[2,89],71:[2,89],72:[2,89],73:[2,89],74:[2,89],75:[2,89],81:[2,89],85:[2,89]},{10:151,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,22],8:[2,22],13:[2,22],18:[2,22],21:[2,22],24:[2,22],25:[2,22],28:[2,22],29:[2,22],48:[2,22],49:[2,22],55:[2,22],56:[2,22],57:[2,22],59:[2,22],60:[2,22],61:[2,22],62:[2,22],63:[2,22],64:[2,22],65:[2,22],66:[2,22],67:[2,22],68:[2,22],70:[2,22],71:[2,22],72:[2,22],73:[2,22],74:[2,22],75:[2,22],81:[2,22],85:[2,22]},{14:89,15:90,16:[1,91],17:152,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37]},{10:153,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,26],8:[2,26],13:[2,26],18:[2,26],21:[2,26],24:[2,26],25:[2,26],28:[2,26],29:[2,26],48:[2,26],49:[2,26],55:[2,26],56:[2,26],57:[2,26],59:[2,26],60:[2,26],61:[2,26],62:[2,26],63:[2,26],64:[2,26],65:[2,26],66:[2,26],67:[2,26],68:[2,26],70:[2,26],71:[2,26],72:[2,26],73:[2,26],74:[2,26],75:[2,26],81:[2,26],85:[2,26]},{10:93,13:[2,23],15:22,16:[1,18],19:20,20:[1,29],22:154,23:21,24:[1,30],25:[2,23],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{10:155,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,91],8:[2,91],13:[2,91],18:[2,91],21:[2,91],24:[2,91],25:[2,91],28:[2,91],29:[2,91],48:[2,91],49:[2,91],55:[2,91],56:[2,91],57:[2,91],59:[2,91],60:[2,91],61:[2,91],62:[2,91],63:[2,91],64:[2,91],65:[2,91],66:[2,91],67:[2,91],68:[2,91],70:[2,91],71:[2,91],72:[2,91],73:[2,91],74:[2,91],75:[2,91],81:[2,91],85:[2,91]},{10:156,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{4:[2,92],8:[2,92],13:[2,92],18:[2,92],21:[2,92],24:[2,92],25:[2,92],28:[2,92],29:[2,92],48:[2,92],49:[2,92],55:[2,92],56:[2,92],57:[2,92],59:[2,92],60:[2,92],61:[2,92],62:[2,92],63:[2,92],64:[2,92],65:[2,92],66:[2,92],67:[2,92],68:[2,92],70:[2,92],71:[2,92],72:[2,92],73:[2,92],74:[2,92],75:[2,92],81:[2,92],85:[2,92]},{16:[1,157]},{20:[1,159],26:158},{13:[2,88],24:[1,44],28:[1,43],29:[2,88],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{13:[2,20],21:[2,20]},{13:[2,19],21:[2,19],24:[1,44],28:[1,43],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{13:[2,25],25:[2,25]},{4:[2,90],8:[2,90],13:[2,90],18:[2,90],21:[2,90],24:[1,44],25:[2,90],28:[1,43],29:[2,90],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{13:[2,16],24:[1,44],28:[1,43],29:[2,16],48:[1,48],49:[1,49],55:[1,45],56:[1,46],57:[1,47],59:[1,50],60:[1,51],61:[1,52],62:[1,53],63:[1,54],64:[1,55],65:[1,56],66:[1,57],67:[1,58],68:[1,59],70:[1,60],71:[1,61],72:[1,62],73:[1,63],74:[1,64],75:[1,65],81:[1,66],85:[1,42]},{4:[2,85],8:[2,85],13:[2,85],18:[2,85],21:[2,85],24:[2,85],25:[2,85],28:[2,85],29:[2,85],48:[2,85],49:[2,85],55:[2,85],56:[2,85],57:[2,85],59:[2,85],60:[2,85],61:[2,85],62:[2,85],63:[2,85],64:[2,85],65:[2,85],66:[2,85],67:[2,85],68:[2,85],70:[2,85],71:[2,85],72:[2,85],73:[2,85],74:[2,85],75:[2,85],81:[2,85],85:[2,85]},{4:[2,30],8:[2,30],21:[2,30],30:[1,160]},{5:161,6:4,7:5,8:[1,6],9:7,10:8,11:9,15:22,16:[1,18],19:20,20:[1,29],23:21,24:[1,30],27:[1,16],28:[1,25],31:17,32:[1,26],33:[1,27],34:10,47:[1,31],48:[1,32],49:[1,33],50:[1,34],51:[1,35],52:[1,36],53:[1,37],54:13,58:[1,23],69:[1,24],76:12,77:19,78:[1,28],79:11,82:14,84:15},{11:162,20:[1,159],26:163,27:[1,16]},{21:[1,164]},{4:[2,28],8:[2,28],21:[2,28]},{4:[2,29],8:[2,29],21:[2,29]},{4:[2,27],8:[2,27],21:[2,27],30:[2,27]}],
defaultActions: {2:[2,1],38:[2,2],90:[2,17],91:[2,18]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};
undefined/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:return (function () {}());
break;
case 1:return 47;
break;
case 2:return 47;
break;
case 3:return 50;
break;
case 4:return 51;
break;
case 5:return 52;
break;
case 6:return 27;
break;
case 7:return 'THEN';
break;
case 8:return 30;
break;
case 9:return 'RETURN';
break;
case 10:return 'NEW';
break;
case 11:return 'TYPEOF';
break;
case 12:return 'VOID';
break;
case 13:return 'INSTANCEOF';
break;
case 14:return 'YIELD';
break;
case 15:return 78;
break;
case 16:return 16;
break;
case 17:return 53;
break;
case 18:return 53;
break;
case 19:return (function () {}());
break;
case 20:return 81;
break;
case 21:return 24;
break;
case 22:return 25;
break;
case 23:return 28;
break;
case 24:return 29;
break;
case 25:return 85;
break;
case 26:return 18;
break;
case 27:return 8;
break;
case 28:return 13;
break;
case 29:return 20;
break;
case 30:return 21;
break;
case 31:return 35;
break;
case 32:return 36;
break;
case 33:return 37;
break;
case 34:return 38;
break;
case 35:return 39;
break;
case 36:return 33;
break;
case 37:return 32;
break;
case 38:return 41;
break;
case 39:return 42;
break;
case 40:return 43;
break;
case 41:return 44;
break;
case 42:return 45;
break;
case 43:return 40;
break;
case 44:return 63;
break;
case 45:return 64;
break;
case 46:return 65;
break;
case 47:return 66;
break;
case 48:return 59;
break;
case 49:return 60;
break;
case 50:return 61;
break;
case 51:return 62;
break;
case 52:return 67;
break;
case 53:return 68;
break;
case 54:return 58;
break;
case 55:return 49;
break;
case 56:return 48;
break;
case 57:return 55;
break;
case 58:return 56;
break;
case 59:return 75;
break;
case 60:return 57;
break;
case 61:return 70;
break;
case 62:return 71;
break;
case 63:return 72;
break;
case 64:return 73;
break;
case 65:return 74;
break;
case 66:return 69;
break;
case 67:return 46;
break;
case 68:return 4;
break;
}
},
rules: [/^(?:\s+)/,/^(?:0[xX][a-fA-F0-9]+\b)/,/^(?:([1-9][0-9]+|[0-9])(\.[0-9]+)?([eE][-+]?[0-9]+)?\b)/,/^(?:null\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:if\b)/,/^(?:then\b)/,/^(?:else\b)/,/^(?:return\b)/,/^(?:new\b)/,/^(?:typeof\b)/,/^(?:void\b)/,/^(?:instanceof\b)/,/^(?:yield\b)/,/^(?:[@$])/,/^(?:[$_a-zA-Z]\w*)/,/^(?:"(\\x[a-fA-F0-9]{2}|\\u[a-fA-F0-9]{4}|\\[^xu]|[^\\"])*")/,/^(?:'(\\[\/'\\bfnrt]|\\u[a-fA-F0-9]{4}|[^\\'])*')/,/^(?:\/\*(?:.|[\r\n])*?\*\/)/,/^(?:\.)/,/^(?:\[)/,/^(?:\])/,/^(?:\()/,/^(?:\))/,/^(?:\?)/,/^(?::)/,/^(?:;)/,/^(?:,)/,/^(?:{)/,/^(?:})/,/^(?:-=)/,/^(?:\+=)/,/^(?:\*=)/,/^(?:\/=)/,/^(?:%=)/,/^(?:--)/,/^(?:\+\+)/,/^(?:>>>=)/,/^(?:>>=)/,/^(?:<<=)/,/^(?:\&=)/,/^(?:\|=)/,/^(?:\^=)/,/^(?:===)/,/^(?:!==)/,/^(?:==)/,/^(?:!=)/,/^(?:<=)/,/^(?:>=)/,/^(?:<)/,/^(?:>)/,/^(?:\&\&)/,/^(?:\|\|)/,/^(?:!)/,/^(?:-)/,/^(?:\+)/,/^(?:\*)/,/^(?:\/)/,/^(?:\^)/,/^(?:%)/,/^(?:>>>)/,/^(?:>>)/,/^(?:<<)/,/^(?:\&)/,/^(?:\|)/,/^(?:~)/,/^(?:=)/,/^(?:$)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}
parser.yy = require('./Scope').Scope;

}).call(this);