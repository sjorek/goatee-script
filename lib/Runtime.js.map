{"version":3,"sources":["Runtime.coffee"],"names":[],"mappings":"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","file":"Runtime.js","sourcesContent":["###\nÂ© Copyright 2013-2017 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\nExpression    = require './Expression'\n\n{\n  arraySlice,\n  bindFunction,\n  isString,\n  isArray,\n  isNumber,\n  isFunction,\n  isExpression,\n  parse\n}             = require './Utility'\n\n###\n# Runtime\n# -------\n#\n# Implements several expression-runtime related methods.\n#\n###\n\n###*\n#  -------------\n# @class Runtime\n# @namepace GoateeScript\n###\nclass Runtime\n\n  _operations = Expression.operations\n\n  ###*\n  #  -------------\n  # @method aliases\n  # @return {Array}\n  # @static\n  ###\n  Runtime.aliases  = _aliases = do ->\n    index = null\n    () ->\n      index ? index = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'.split('')\n\n  ###*\n  #  -------------\n  # @method generate\n  # @param  {Boolean} [compress=true]\n  # @return {String}\n  # @static\n  ###\n  Runtime.generate = do ->\n\n    aliases     = []\n    for alias in _aliases().reverse() when not _operations[alias]?\n      aliases.push alias\n    index       = aliases.length\n\n    return if index is 0\n\n    for key, value of _operations when value.name? and not value.alias?\n      _operations[value.alias = aliases[--index]] = key\n      if index is 0\n        break\n\n    _operations['()'].code = \"\"\"\n      function(){\n        var a,f;\n        f=arguments[0],a=2<=arguments.length?aS(arguments,1):[];\n        return f.apply(this,a);\n      }\n      \"\"\"\n\n    runtime =\n\n      global        :\n        name        : 'global'\n        alias       : if index is 0 then '_g' else aliases[--index]\n        code        : 'null'\n\n      local         :\n        name        : 'local'\n        alias       : if index is 0 then '_l' else aliases[--index]\n        code        : 'null'\n\n      stack         :\n        name        : 'stack'\n        alias       : if index is 0 then 'st' else aliases[--index]\n        code        : '[]'\n\n      scope         :\n        name        : 'scope'\n        alias       : if index is 0 then 'sc' else aliases[--index]\n        code        : '[]'\n\n      evaluate      :\n        name        : 'evaluate'\n        alias       : if index is 0 then '_e' else aliases[--index]\n        code        : \"\"\"\n                      function(c,e,v,_,$) {\n                        var g,r;\n                        if(!(isFunction(e) && e.name)){return e;}\n                        g = _global === null ? _evaluate : false;\n                        if (g) {\n                          _global   = c||{};\n                          _local    = v||{};\n                          _scope    = _||_scope.length = 0||_scope;\n                          _stack    = $||_stack.length = 0||_stack;\n                          _evaluate = _execute;\n                        };\n                        r = _execute(c,e);\n                        if (g) {\n                          _global   = null;\n                          _evaluate = g;\n                        };\n                        return r;\n                      }\n                      \"\"\"\n        evaluate    : Expression.evaluate\n\n      execute       :\n        name        : 'execute'\n        alias       : if index is 0 then '_x' else aliases[--index]\n        code        : \"\"\"\n                      function(c,e) {\n                        var r,f;\n                        if(!(isFunction(e) && e.name)){return e;};\n                        _scope.push(c);\n                        _stack.push(e);\n                        try {\n                          r = _process(c,e); /* ?!?!?!?! */\n                        } catch(f) {};\n                        _scope.pop();\n                        _stack.pop();\n                        return r;\n                      }\n                      \"\"\"\n        evaluate    : Expression.execute\n\n      call          :\n        name        : 'call'\n        alias       : if index is 0 then 'ca' else aliases[--index]\n        code        : 'Function.prototype.call'\n\n      slice         :\n        name        : 'slice'\n        alias       : if index is 0 then 'sl' else aliases[--index]\n        code        : 'Array.prototype.slice'\n\n      toString      :\n        name        : 'toString'\n        alias       : if index is 0 then 'tS' else aliases[--index]\n        code        : 'Object.prototype.toString'\n\n      booleanize    :\n        name        : 'booleanize'\n        alias       : if index is 0 then '_b' else aliases[--index]\n        evaluate    : Expression.booleanize\n\n      isFunction    :\n        name        : 'isFunction'\n        alias       : if index is 0 then 'iF' else aliases[--index]\n        evaluate    : isFunction\n\n      bindFunction  :\n        name        : 'bindFunction'\n        alias       : if index is 0 then 'bF' else aliases[--index]\n        code        : \"\"\"\n                      (function(bindFunction) {\n                        return bindFunction ? function() {\n                            return bindFunction.apply(arguments);\n                          } : function() {\n                            var f, c, a;\n                            f = arguments[0];\n                            c = arguments[1];\n                            a = 3 <= arguments.length ? arraySlice(arguments, 2) : [];\n                            return a.length === 0\n                              ? function() { return f.call(c); }\n                              : function() { return f.apply(c, a); };\n                          }\n                      })(Function.prototype.bind)\n                      \"\"\"\n        evaluate    : bindFunction\n\n      isArray       :\n        name        : 'isArray'\n        alias       : if index is 0 then 'iA' else aliases[--index]\n        code        : \"\"\"\n                      (function(isArray) {\n                        return isArray || function(o){return _toString.call(o)==='[object Array]';};\n                      })(Array.isArray)\n                      \"\"\"\n        evaluate    : isArray\n\n      arraySlice    :\n        name        : 'arraySlice'\n        alias       : if index is 0 then 'aS' else aliases[--index]\n        #code        : '[].slice'\n        evaluate    : arraySlice\n\n      hasProperty   :\n        name        : 'hasProperty'\n        alias       : if index is 0 then 'hP' else aliases[--index]\n        code        : \"\"\"\n                      (function(hasProperty) {\n                        return function() {\n                          hasProperty.apply(arguments);\n                        };\n                      })({}.hasOwnProperty)\n                      \"\"\"\n\n      isProperty    :\n        name        : 'isProperty'\n        alias       : if index is 0 then 'iP' else aliases[--index]\n        code        : \"\"\"\n                      function() {\n                        if(_stack.length < 2){return false;}\n                        var p = _stack.length > 1 ? _stack[_stack.length-2] : void(0),\n                            c = _stack.length > 0 ? _stack[_stack.length-1] : void(0);\n                        return p.toString() === '#{_operations['.'].alias}' && p[1] === c;\n                      }\n                      \"\"\"\n#      Number        :\n#        name        : 'Number'\n#        alias       : if index is 0 then 'Nu' else aliases[--index]\n#        code        : \"Number\"\n#        evaluate    : Number\n\n    unwrap  = /^function\\s*\\(([^\\)]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*[;|\\}])\\s*\\}$/\n    pattern = [\n      /(\\s|\\n)+/g                 , ' '\n      /_assignment/g              , _operations['='].alias\n      /_reference/g               , _operations.reference.alias\n      /_global/g                  , runtime.global.alias\n      /_local/g                   , runtime.local.alias\n      /_scope/g                   , runtime.scope.alias\n      /_stack/g                   , runtime.stack.alias\n      /_evaluate/g                , runtime.evaluate.alias\n      /_execute/g                 , runtime.execute.alias\n      /_booleanize/g              , runtime.booleanize.alias\n      /__slice\\.call|arraySlice/g , runtime.arraySlice.alias\n      /_slice/g                   , runtime.slice.alias\n      /_call/g                    , runtime.call.alias\n      /([^\\.])isArray/g           , \"$1#{runtime.isArray.alias}\"\n      /_toString/g                , runtime.toString.alias\n      /isNumber/g                 , runtime.global.alias\n#      /(Nu)mber/g                 , runtime.Number.alias\n      /isFunction/g               , runtime.isFunction.alias\n      /bindFunction/g             , runtime.bindFunction.alias\n      /_isProperty/g              , runtime.isProperty.alias\n      /hasProperty/g              , runtime.hasProperty.alias\n      ///\n        ([a-zA-Z]+)\\.hasOwnProperty\\(\n      ///g                        , \"#{runtime.hasProperty.alias}($1,\"\n      /(_l)en/g                   , if index is 0 then \"$1\" else aliases[--index]\n      /obj([^e])|item/g           , 'o$1'\n      /value/g                    , 'v'\n      /\\(array,start,end\\)/g      , '()'\n      /([a-z0-9])\\s([^a-z0-9])/gi , '$1$2'\n      /([^a-z0-9])\\s([a-z0-9])/gi , '$1$2'\n      /([^a-z0-9])\\s([^a-z0-9])/gi, '$1$2'\n      /([a-z0-9])\\s([^a-z0-9])/gi , '$1$2'\n      /([^a-z0-9])\\s([a-z0-9])/gi , '$1$2'\n      /([^a-z0-9])\\s([^a-z0-9])/gi, '$1$2'\n      /return(\\S)/gi              , 'return $1'\n    ]\n    clean  = (key, value, code) ->\n      for search, index in pattern by 2\n        code = code.replace(search, pattern[index+1])\n\n      if key.length > 1 and key[key.length-1] is '='\n        alias = _operations[key.substring(0,key.length-1)].alias\n        code = code.replace('_op', alias)\n\n      code\n\n    vars = []\n    body = []\n\n    assemble = (object) ->\n      for key, value of object when value.name?\n        code = clean(\n          key, value,\n          if value.code? then value.code else value.evaluate.toString()\n        )\n        vars.push [\n          '/* ', key, ' */ ',\n          value.alias\n        ].join ''\n        body.push [\n          '/* ', key, ' */ ',\n          value.alias, '=', code\n        ].join ''\n\n    assemble runtime\n    assemble _operations\n\n    code = \"var #{vars.join ',\\n'};\\n#{body.join ';\\n'};\"\n    # remove comments and linebreaks\n    js = code\n      .replace( /\\/\\*(?:.|[\\r\\n])*?\\*\\/\\s*|/g   , ''  )\n      .replace( /\\s*[;]\\s*[\\}]/g                , '}' )\n      .replace( /([,;])[\\r\\n]/g                 , '$1')\n\n    (compress=on) ->\n      if compress is on then js else code\n\nmodule.exports = Runtime\n"]}