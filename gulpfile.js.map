{"version":3,"sources":["gulpfile.coffee"],"names":[],"mappings":"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","file":"gulpfile.js","sourcesContent":["###\nÂ© Copyright 2013-2016 Stephan Jorek <stephan.jorek@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n<http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n###\n\ngulp = require 'gulp'\n\nbeautify = require 'gulp-beautify'\ncoffee = require 'gulp-coffee'\n#cson = require 'gulp-cson'\ncson = require \"#{__dirname}/lib/misc/gulp/gulp-cson\"\nfooter = require 'gulp-footer'\nfs = require 'fs'\ngrammar = require \"#{__dirname}/lib/misc/gulp/gulp-jison-grammar\"\ngroc = require 'gulp-groc'\nheader = require 'gulp-header'\njasmine = require 'gulp-jasmine'\n#jison = require 'gulp-jison'\nparser = require \"#{__dirname}/lib/misc/gulp/gulp-jison-parser\"\nrename = require 'gulp-rename'\nreplace = require 'gulp-replace'\ndel = require 'del'\nsequence = require 'run-sequence'\nsourcemaps = require 'gulp-sourcemaps'\ntaskqueue = require \"#{__dirname}/lib/misc/gulp/gulp-taskqueue\"\ntemplate = require 'gulp-template'\n# enable for debuggin purposes:\n#logger = require 'gulp-logger'\nutil = require 'gulp-util'\n\n{\n  isString\n} = require \"#{__dirname}/lib/Utility\"\n\nGrammar = require \"#{__dirname}/lib/Grammar\"\n\nrequire 'coffee-script/register' # only needed for javascript-script execution\n#require 'require-cson' # only needed for coffee-script execution\n\n###\n# # Gulp-Tasks\n# ------------\n###\n\ndeps = taskqueue.createDependencyLog()\ndeps.jison = [] # ['transpile']\ndeps.jasmine = [] # ['transpile']\n\nload = (filename) ->\n  #require \"goatee-script/misc/gulp/tasks/#{filename}.json\"\n  require \"#{__dirname}/lib/misc/gulp/tasks/#{filename}.json\"\n\n###\n# ## Task: coffee:transpile\n# -------------------------\n#\n# Transpile coffee-script to javascript.\n#\n###\ntask = 'coffee:transpile'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n    if name is 'coffee:transpile:gulpfile'\n      config.footer = [\n        \"\"\"\n        /**\n         * Spit out the brand â¦\n         */\n        [\n          '<%= readme %>'\n        ].map(function(l){\n          util.log(l.replace(/(.)[0-9a-z]/g,function(r){\n            return r[0]\n              .repeat('0123456789abcdefghijklmnopqrstuvwxyz'.indexOf(r[1])+1)\n          }));\n        });\n        \"\"\"\n        {\n          readme: fs.readFileSync('./README.md', 'utf8')\n            .split('\\n')[6...38].map (line) ->\n              line\n                .replace(/^ {8}/, '')\n                .replace /(.)\\1{0,35}/g, (c) ->\n                  c[0].replace(/(\\\\|')/,\"\\\\$1\") \\\n                  + '0123456789abcdefghijklmnopqrstuvwxyz'.charAt(c.length - 1)\n\n            .join \"',\\n  '\"\n        }\n      ]\n\n    ->\n      util.log name, source, destination\n\n      sm = config.sourcemaps ? false\n\n      pipe = gulp.src.apply(gulp, source)\n      pipe = pipe.pipe logger(config.logger) if logger? and config.logger?\n      if config.replace?\n        for replacement in config.replace\n          pipe = pipe.pipe replace.apply(null, replacement)\n      pipe = pipe.pipe sourcemaps.init.apply(sourcemaps, sm.init) if sm\n      pipe = pipe.pipe coffee(config.defaults).on('error', util.log)\n      pipe = pipe.pipe header.apply null, config.header if config.header?\n      pipe = pipe.pipe footer.apply null, config.footer if config.footer?\n      pipe = pipe.pipe beautify.apply null, config.beautify if config.beautify?\n      pipe = pipe.pipe sourcemaps.write.apply(sourcemaps, sm.write) if sm\n      pipe = pipe.pipe rename(config.rename) if config.rename?\n      pipe.pipe gulp.dest(destination)\n\ngulp.task task, deps.queue\ndeps.transpile.push task\n\n\n###\n# # Task: cson:transpile\n# ------------------------\n#\n# Transpile cson to json\n#\n###\ntask = 'cson:transpile'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n    if name.match /^cson:transpile:groc:config/\n      config.template = {'__dirname': __dirname}\n      #util.log 'set', config.template, 'for', name\n    ->\n      util.log name, source, destination\n\n      pipe = gulp.src.apply(gulp, source)\n      pipe = pipe.pipe logger(config.logger) if logger? and config.logger?\n      if config.replace?\n        for replacement in config.replace\n          pipe = pipe.pipe replace.apply(null, replacement)\n      pipe = pipe.pipe cson(config.defaults).on('error', util.log)\n      pipe = pipe.pipe header.apply null, config.header if config.header?\n      pipe = pipe.pipe footer.apply null, config.footer if config.footer?\n      pipe = pipe.pipe rename(config.rename) if config.rename?\n      pipe = pipe.pipe template(config.template) if config.template?\n      pipe.pipe gulp.dest destination\n\ngulp.task task, deps.queue\ndeps.transpile.push task\n\n\n###\n# # Task: transpile\n# ------------------\n#\n# Transpile source files â¦\n#\n###\ngulp.task 'transpile', deps.transpile, -> util.log 'Transpiling done'\n\n#deps.build.push 'transpile'\n\n###\n# # Task: jison:grammar\n# ---------------------\n#\n# Build jison grammar\n#\n###\ntask = 'jison:grammar'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n\n    defaults = taskqueue.cloneObject config.defaults\n    defaults.grammar = Grammar\n\n    ->\n      util.log name, source, destination\n\n      #sm = config.sourcemaps ? false\n\n      pipe = gulp.src.apply(gulp, source)\n      pipe = pipe.pipe logger(config.logger) if logger? and config.logger?\n      #pipe = pipe.pipe sourcemaps.init.apply(sourcemaps, sm.init) if sm\n      pipe = pipe.pipe grammar(defaults) #.on('error', util.log)\n      if config.replace?\n        for replacement in config.replace\n          pipe = pipe.pipe replace.apply(null, replacement)\n      pipe = pipe.pipe header.apply null, config.header if config.header?\n      pipe = pipe.pipe footer.apply null, config.footer if config.footer?\n      #pipe = pipe.pipe sourcemaps.write.apply(sourcemaps, sm.write) if sm\n      pipe = pipe.pipe rename(config.rename) if config.rename?\n      pipe.pipe gulp.dest(destination)\n\ngulp.task task, deps.queue\ndeps.jison.push task\n\n###\n# # Task: jison:parser\n# ------------------------\n#\n# Build jison parser\n#\n###\ntask = 'jison:parser'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n\n    defaults = taskqueue.cloneObject config.defaults\n    defaults.grammar = Grammar\n\n    ->\n      util.log name, source, destination\n\n      #sm = config.sourcemaps ? false\n\n      pipe = gulp.src.apply(gulp, source)\n      pipe = pipe.pipe logger(config.logger) if logger? and config.logger?\n      #pipe = pipe.pipe sourcemaps.init.apply(sourcemaps, sm.init) if sm\n      if config.replace?\n        for replacement in config.replace\n          pipe = pipe.pipe replace.apply(null, replacement)\n      pipe = pipe.pipe parser(defaults) #.on('error', util.log)\n      pipe = pipe.pipe header.apply null, config.header if config.header?\n      pipe = pipe.pipe footer.apply null, config.footer if config.footer?\n      pipe = pipe.pipe beautify.apply null, config.beautify if config.beautify?\n      #pipe = pipe.pipe sourcemaps.write.apply(sourcemaps, sm.write) if sm\n      pipe = pipe.pipe rename(config.rename) if config.rename?\n      pipe.pipe gulp.dest(destination)\n\ngulp.task task, deps.queue\ndeps.jison.push task\n\n###\n# # Task: coffee:transpile\n# ------------------------\n#\n# Build jison tasks.\n#\n###\n\ngulp.task 'jison', deps.jison, ->\n  util.log 'Jison tasks done.'\n\n###\n# # Task: build\n# ------------------------\n#\n# Run build steps in sequence\n#\n###\ngulp.task 'build', deps.build, (callback) ->\n  sequence 'clean', 'transpile', 'jison:parser:default', (error) ->\n    util.log error.message if error?\n    callback()\n  util.log 'Build done'\n\n#deps.watch.push 'build'\n\n###\n# # Task: test\n# ------------------------\n#\n# Run the tests\n#\n###\ntask = 'test:jasmine'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n\n    (callback) ->\n      util.log name, source, destination\n      gulp.src(source).pipe jasmine(config.defaults)\n      callback()\n\ngulp.task task, deps.queue\ndeps.test.push task\n\n###\n# # Task: test\n# ------------------------\n#\n# Run the tests\n#\n###\ngulp.task 'test', deps.test, ->\n  util.log 'Tests done.'\n\n###\n# # Task: groc:doc\n# ----------------\n#\n# Create documenation with groc\n#\n###\ntask = 'groc:doc'\ndeps = taskqueue.build task, deps, load, gulp, \\\n  (source, destination, name, config) ->\n    ->\n      defaults = taskqueue.cloneObject config.defaults\n      if isString config.defaults._\n        defaults = require(config.defaults._)\n        defaults[key] = value for own key, value of config.defaults \\\n          when key isnt '_'\n      defaults.out = destination\n      #defaults.verbose = true\n      #defaults['very-verbose'] = true\n      ##unless logger? or defaults.silent? or defaults.verbose?\n      ##  defaults.silent = true\n\n      unless source? and 0 < source.length\n        source = [defaults.glob]\n\n      unless source? and 0 < source.length\n        util.log name, 'skipped, as sources are missing', source, destination\n        return\n\n      util.log name, source, destination #, config, defaults\n\n      pipe = gulp.src.apply(gulp, source)\n      pipe = pipe.pipe logger(config.logger) if logger? and config.logger?\n      if config.replace?\n        for replacement in config.replace\n          pipe = pipe.pipe replace.apply(null, replacement)\n      pipe.pipe groc(defaults)\n\ngulp.task task, deps.queue\ndeps.doc.push task\n\n###\n# # Task: doc\n# -----------\n#\n# Run documentation tasks.\n#\n###\ngulp.task 'doc', deps.doc, ->\n  util.log 'Documentation updated'\n\n#deps.doc.push 'build'\n#deps.publish.push 'doc'\n\n###\n# # Task: clean\n# -------------\n#\n# Make everything clean and shiny.\n#\n###\ngulp.task 'clean', deps.clean, -> util.log 'Everything clean'\n\n###\n# # Task: publish\n# ------------------------\n#\n# Publish everything â¦\n#\n###\ngulp.task 'publish', ['build', 'doc'].concat(deps.publish), ->\n  util.log 'Published'\n\n###\n# # Task: watch\n# -------------\n#\n# The big brother is â¦ ?\n###\ngulp.task 'watch', deps.watch, -> util.log 'Watcher running'\n\n###\n# # Task: default\n# ---------------\n#\n# Run build per default â¦\n#\n###\ngulp.task 'default', ['build']\n"]}